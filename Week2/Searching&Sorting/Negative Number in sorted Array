Negative numbers in sorted array

Given a sorted array of integers, find the number of negative numbers.

Expected Time Complexity: O(log n)

Examples
Array: [-5, -3, -2, 3, 4, 6, 7, 8]
Answer: 3
Array: [0, 1, 2, 3, 4, 6, 7, 8]
Answer: 0

1.naive   tc=O(n) Sc=O(1)
class Solution {
	int getNegativeNumbersCount (int[] arr) 
	{
		// add your logic here
		int count=0;
		for(int i=0;i<arr.length;i++)
		{
			if(0>arr[i])
			{
				count++;
			}
		}
		return count;
	}
}

2.optimal (binary search)
public class CountNegatives {
    public static int countNegatives(int[] arr) {
        int left = 0, right = arr.length - 1;
        int lastNegative = -1;  // to remember last negative element index

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (arr[mid] < 0) {
                // This is a negative number
                lastNegative = mid;
                left = mid + 1;  // go right to find more negatives
            } else {
                // Not negative, so check on the left side
                right = mid - 1;
            }
        }
        return lastNegative + 1;  // index+1 = count of negatives
    }
